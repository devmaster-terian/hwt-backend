/*
 * File: app/view/winReporteCondicionLinea.js
 *
 * This file was generated by Sencha Architect version 4.1.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('hwtProCondicionUnidad.view.winReporteCondicionLinea', {
    extend: 'Ext.window.Window',
    alias: 'widget.winReporteCondicionLinea',

    requires: [
        'hwtProCondicionUnidad.view.winReporteCondicionLineaViewModel',
        'Ext.form.Panel',
        'Ext.form.FieldSet',
        'Ext.form.field.Display',
        'Ext.form.field.ComboBox',
        'Ext.form.field.File',
        'Ext.form.field.FileButton',
        'Ext.toolbar.Toolbar',
        'Ext.toolbar.Fill'
    ],

    viewModel: {
        type: 'winreportecondicionlinea'
    },
    modal: true,
    id: 'winReporteCondicionLinea',
    itemId: 'winReporteCondicionLinea',
    width: 600,
    closable: false,
    title: 'Reporte de Condición (Línea)',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            grabarReporteCondicionLinea: function() {
                var apiController          = 'apiCondicionUnidad';
                var apiMethod              = 'grabaCondicionLinea';

                var functionSuccess = function(){
                    var jsonData = elf.getInfoDataBridge(apiMethod);

                    //ECRC: Actualizando el Grid con los Datos Actualizados
                    if(Ext.getCmp('gridReporteCondicionLinea').recordActivo !== undefined){
                        hwtRecordCondicionUnidadLinea = Ext.getCmp('gridReporteCondicionLinea').recordActivo;
                        hwtRecordCondicionUnidadLinea.data.valor_referencia         = elf.readElement('tfLineaValorReferencia');
                        hwtRecordCondicionUnidadLinea.data.observaciones            = elf.readElement('tfLineaObservaciones');
                        hwtRecordCondicionUnidadLinea.data.precio_unitario_estimado = elf.readElement('tflineaPrecioUnitarioEstimado');

                        Ext.getCmp('gridReporteCondicionLinea').getView().refreshNode(hwtRecordCondicionUnidadLinea);
                    }
                    else{
                        elf.refreshGrid('gridReporteCondicionLinea');
                    }

                    elf.closeWindow('winReporteCondicionLinea');

                    //ECRC: Actualizando los Totales de la Reparacion
                    elf.writeElement('tfNumReparaciones'     ,jsonData.totalReparaciones.num_reparaciones);
                    elf.writeElement('tfPrecioTotalEstimado' ,jsonData.totalReparaciones.precio_total_estimado);
                };

                var functionFailure = function(){
                    var jsonData = elf.getInfoDataBridge(apiMethod);
                    elf.closeWindow('winReporteCondicionLinea');
                };

                var objJsonData            = new Object();
                objJsonData.tfLineaNumReporte             = elf.readElement('tfLineaNumReporte');
                objJsonData.tfLineaNumSequencia           = elf.readElement('tfLineaNumSequencia');
                objJsonData.tfLineaCodSeccion             = elf.readElement('tfLineaCodSeccion');
                objJsonData.tfLineaCodCaracteristica      = elf.readElement('tfLineaCodCaracteristica');
                objJsonData.tfLineaDescCaracteristica     = elf.readElement('tfLineaDescCaracteristica');
                objJsonData.cbxLineaEstado                = elf.readElement('cbxLineaEstado');
                objJsonData.tfLineaValorReferencia        = elf.readElement('tfLineaValorReferencia');
                objJsonData.tfLineaObservaciones          = elf.readElement('tfLineaObservaciones');
                objJsonData.tflineaPrecioUnitarioEstimado = elf.readElement('tflineaPrecioUnitarioEstimado','number');

                var objJsonRequest = new Object();
                objJsonRequest.apiController = apiController;
                objJsonRequest.apiMethod     = apiMethod;
                objJsonRequest.apiData       = JSON.stringify(objJsonData);
                objJsonRequest.noMessage     = true;

                elf.doDataBridge(objJsonRequest,
                functionSuccess,
                null,
                functionFailure,
                null);

            },
            baseCls: 'formBackground',
            id: 'formReporteCondicionLinea',
            itemId: 'formReporteCondicionLinea',
            bodyPadding: 10,
            items: [
                {
                    xtype: 'fieldset',
                    id: 'fieldsetLineaReporteCondicionEvaluacion',
                    itemId: 'fieldsetLineaReporteCondicionEvaluacion',
                    layout: 'column',
                    title: '<b>Reporte de Condición (Evaluación)</b>',
                    items: [
                        {
                            xtype: 'displayfield',
                            columnWidth: 0.4,
                            id: 'tfLineaNumReporte',
                            itemId: 'tfLineaNumReporte',
                            margin: '0 5 5 0',
                            fieldLabel: 'Num. Reporte'
                        },
                        {
                            xtype: 'displayfield',
                            columnWidth: 0.4,
                            id: 'tfLineaNumSequencia',
                            itemId: 'tfLineaNumSequencia',
                            margin: '0 5 5 0',
                            fieldLabel: 'Secuencia'
                        },
                        {
                            xtype: 'displayfield',
                            columnWidth: 0.4,
                            id: 'tfLineaCodSeccion',
                            itemId: 'tfLineaCodSeccion',
                            margin: '0 5 5 0',
                            fieldLabel: 'Seccion'
                        },
                        {
                            xtype: 'displayfield',
                            columnWidth: 0.4,
                            id: 'tfLineaCodCaracteristica',
                            itemId: 'tfLineaCodCaracteristica',
                            margin: '0 5 5 0',
                            fieldLabel: 'Caracteristica'
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 1,
                            disabled: true,
                            disabledCls: 'disabledField',
                            id: 'tfLineaDescCaracteristica',
                            itemId: 'tfLineaDescCaracteristica',
                            margin: '0 5 5 0',
                            fieldLabel: 'Condición'
                        },
                        {
                            xtype: 'combobox',
                            columnWidth: 0.5,
                            id: 'cbxLineaEstado',
                            itemId: 'cbxLineaEstado',
                            margin: '0 5 5 0',
                            fieldLabel: 'Estado',
                            editable: false,
                            displayField: 'descripcion',
                            queryMode: 'local',
                            store: 'storeLineaEstado',
                            valueField: 'descripcion'
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    id: 'fieldsetLineaInformacion',
                    itemId: 'fieldsetLineaInformacion',
                    layout: 'column',
                    title: '<b>Información</b>',
                    items: [
                        {
                            xtype: 'textfield',
                            columnWidth: 0.5,
                            id: 'tfLineaValorReferencia',
                            itemId: 'tfLineaValorReferencia',
                            margin: '0 5 5 0',
                            fieldLabel: 'Valor Referencia'
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 1,
                            id: 'tfLineaObservaciones',
                            itemId: 'tfLineaObservaciones',
                            margin: '0 5 5 0',
                            fieldLabel: 'Observaciones'
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.5,
                            id: 'tflineaPrecioUnitarioEstimado',
                            itemId: 'tflineaPrecioUnitarioEstimado',
                            margin: '0 5 5 0',
                            fieldLabel: 'Precio Estimado',
                            maskRe: /[0-9]/
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    id: 'fieldsetLineaImagenes',
                    itemId: 'fieldsetLineaImagenes',
                    layout: 'column',
                    title: '<b>Imagenes</b>',
                    items: [
                        {
                            xtype: 'filefield',
                            columnWidth: 0.75,
                            id: 'tfLineaFotografia',
                            itemId: 'tfLineaFotografia',
                            margin: '0 5 5 0',
                            maxWidth: 450,
                            fieldLabel: 'Fotografía',
                            buttonText: '...',
                            buttonConfig: {
                                xtype: 'filebutton',
                                cls: 'botonZoomWindow',
                                iconCls: 'fa fa-folder icon16 iconColorWhite'
                            }
                        },
                        {
                            xtype: 'button',
                            columnWidth: 0.1,
                            cls: 'botonZoomWindow',
                            id: 'btnLineaCargarImagen',
                            itemId: 'btnLineaCargarImagen',
                            margin: '0 5 5 0',
                            maxWidth: 130,
                            minWidth: 130,
                            width: 130,
                            iconCls: 'fa fa-cloud-upload icon16 iconColorWhite',
                            text: 'Subir Imagen',
                            listeners: {
                                click: 'onBtnLineaCargarImagenClick'
                            }
                        }
                    ]
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            cls: 'toolbarBackground',
            dock: 'bottom',
            items: [
                {
                    xtype: 'button',
                    id: 'btnLineaConfirmar',
                    itemId: 'btnLineaConfirmar',
                    width: 130,
                    iconCls: 'fa fa-check-square icon16 iconColorGreen',
                    text: 'Confirmar',
                    textAlign: 'left',
                    listeners: {
                        click: 'onBtnLineaConfirmarClick'
                    }
                },
                {
                    xtype: 'tbfill'
                },
                {
                    xtype: 'button',
                    id: 'btnLineaCerrar',
                    itemId: 'btnLineaCerrar',
                    width: 130,
                    iconCls: 'fa fa-window-close icon16 iconColorRed',
                    text: 'Cerrar',
                    textAlign: 'left',
                    listeners: {
                        click: 'onBtnLineaCerrarClick'
                    }
                }
            ]
        }
    ],

    onBtnLineaCargarImagenClick: function(button, e, eOpts) {
        var apiController = 'apiCondicionUnidad';
        var apiMethod     = 'cargaImagenCondicionLinea';

        var objParamsEnvio = new Object();
        objParamsEnvio.windowUpload  = 'winReporteCondicionLinea';
        objParamsEnvio.fieldFileLoad = 'tfLineaFotografia';
        objParamsEnvio.apiController = apiController;
        objParamsEnvio.apiMethod     = apiMethod;
        objParamsEnvio.functionUpload = function(){
            console.warn('Se supone que ya se actualizo la imagen, verifica ya!');
            var jsonData = elf.getInfoDataBridge('cargaImagenCondicionLinea');

            console.warn('jsonData');
            console.warn(jsonData);

            //ECRC: Actualizando el Grid con los Datos Actualizados
            hwtRecordCondicionUnidadLinea = Ext.getCmp('gridReporteCondicionLinea').recordActivo;
            hwtRecordCondicionUnidadLinea.data.valor_referencia         = elf.readElement('tfLineaValorReferencia');
            hwtRecordCondicionUnidadLinea.data.observaciones            = elf.readElement('tfLineaObservaciones');
            hwtRecordCondicionUnidadLinea.data.precio_unitario_estimado = elf.readElement('tflineaPrecioUnitarioEstimado');
            hwtRecordCondicionUnidadLinea.data.fotografia               = jsonData.objImagen.file;
            Ext.getCmp('gridReporteCondicionLinea').getView().refreshNode(hwtRecordCondicionUnidadLinea);

            elf.writeElement('tfNumReparaciones'     ,jsonData.objResultReparaciones.totalReparaciones.num_reparaciones);
            elf.writeElement('tfPrecioTotalEstimado' ,jsonData.objResultReparaciones.totalReparaciones.precio_total_estimado);
            console.warn('grid Actualizado');

        };

        //ECRC: Parámetros de Validación del Registro
        objParamsEnvio.numReporte        = elf.readElement('tfLineaNumReporte');
        objParamsEnvio.numSequencia      = elf.readElement('tfLineaNumSequencia');
        objParamsEnvio.codSeccion        = elf.readElement('tfLineaCodSeccion');
        objParamsEnvio.codCaracteristica = elf.readElement('tfLineaCodCaracteristica');

        objParamsEnvio.estado          = elf.readElement('cbxLineaEstado');
        objParamsEnvio.valorReferencia = elf.readElement('tfLineaValorReferencia');
        objParamsEnvio.observaciones   = elf.readElement('tfLineaObservaciones');
        objParamsEnvio.precioEstimado  = elf.readElement('tflineaPrecioUnitarioEstimado');

        //ECRC: Información de Identificación de la Imagen
        var imagenIdentificador = elf.readElement('tfLineaNumReporte')   + '_' +
            elf.readElement('tfLineaNumSequencia') + '_' +
            elf.readElement('tfLineaCodSeccion')   + '_' +
            elf.readElement('tfLineaCodCaracteristica');

        objParamsEnvio.imagenOrigen        = 'condicionUnidadLinea';
        objParamsEnvio.imagenDocumento     = 'reporte_' + elf.readElement('tfLineaNumReporte');
        objParamsEnvio.imagenIdentificador = imagenIdentificador;

        elf.sendFile('formReporteCondicionLinea',objParamsEnvio);

    },

    onBtnLineaConfirmarClick: function(button, e, eOpts) {
        Ext.getCmp('formReporteCondicionLinea').grabarReporteCondicionLinea();
    },

    onBtnLineaCerrarClick: function(button, e, eOpts) {
        elf.closeWindow('winReporteCondicionLinea');
    }

});