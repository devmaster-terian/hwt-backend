/*
 * File: app/store/storeCotizacion.js
 *
 * This file was generated by Sencha Architect version 4.1.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('hwtProCotizacion.store.storeCotizacion', {
    extend: 'Ext.data.Store',

    requires: [
        'hwtProCotizacion.model.modCotizacion',
        'Ext.data.proxy.Rest',
        'Ext.data.reader.Json'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            storeId: 'storeCotizacion',
            model: 'hwtProCotizacion.model.modCotizacion',
            proxy: {
                type: 'rest',
                reader: {
                    type: 'json',
                    rootProperty: function(data) {
                        var storeCotizacion = Ext.getStore('storeCotizacion');
                        var rawData = storeCotizacion.getProxy().getReader().rawData;
                        return rawData.hwtCotizacion;
                    }
                }
            },
            listeners: {
                beforeload: {
                    fn: me.onStoreBeforeLoad,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onStoreBeforeLoad: function(store, operation, eOpts) {
        var storeCotizacion = Ext.getStore('storeCotizacion');
        var proxyCotizacion = storeCotizacion.getProxy();

        var objJsonData = new Object();
        objJsonData.page  = storeCotizacion.currentPage;
        objJsonData.start = (storeCotizacion.currentPage - 1) * storeCotizacion.pageSize;
        objJsonData.limit = storeCotizacion.pageSize;

        var objJsonRequest = new Object();
        objJsonRequest.apiController = 'apiCotizacion';
        objJsonRequest.apiMethod     = 'listaCotizacion';
        objJsonRequest.apiData       = JSON.stringify(objJsonData);

        proxyCotizacion.api.read    = elf.setApiDataBridge(objJsonRequest.apiController);
        proxyCotizacion.extraParams = objJsonRequest;

    }

});