/*
 * File: app/store/storeCliente.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('hwtCatCliente.store.storeCliente', {
    extend: 'Ext.data.Store',

    requires: [
        'hwtCatCliente.model.modelCliente',
        'Ext.data.proxy.Rest',
        'Ext.data.reader.Json'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            pageSize: 150,
            storeId: 'storeCliente',
            model: 'hwtCatCliente.model.modelCliente',
            listeners: {
                beforeload: {
                    fn: me.onStoreBeforeLoad,
                    scope: me
                }
            },
            proxy: {
                type: 'rest',
                reader: {
                    type: 'json',
                    rootProperty: function(data) {
                        var storeCliente = Ext.getStore('storeCliente');
                        var rawData = storeCliente.getProxy().getReader().rawData;
                        return rawData.hwtCliente;
                    }
                }
            }
        }, cfg)]);
    },

    onStoreBeforeLoad: function(store, operation, eOpts) {
        var storeCliente = Ext.getStore('storeCliente');
        var proxyCliente = storeCliente.getProxy();

        var objJsonData = new Object();
        objJsonData.page  = storeCliente.currentPage;
        objJsonData.start = (storeCliente.currentPage - 1) * storeCliente.pageSize;
        objJsonData.limit = storeCliente.pageSize;
        objJsonData.filtroEstado = elf.readElement('cbxGridEstadoCliente');

        var formParametrosBusqueda = Ext.getCmp('formParametrosBusqueda');

        if(formParametrosBusqueda !== undefined){
            objJsonData.paramCodigo      = elf.readElement('fiParamCodigo');
            objJsonData.paramNombreCorto = elf.readElement('fiParamNombreCorto');
            objJsonData.paramRazonSocial = elf.readElement('fiParamRazonSocial');
            objJsonData.paramRFC         = elf.readElement('fiParamRFC');
        }

        var objJsonRequest = new Object();
        objJsonRequest.apiController = 'apiCliente';
        objJsonRequest.apiMethod     = 'listaCliente';
        objJsonRequest.apiData       = JSON.stringify(objJsonData);

        proxyCliente.api.read    = elf.setApiDataBridge(objJsonRequest.apiController);
        proxyCliente.extraParams = objJsonRequest;

    }

});