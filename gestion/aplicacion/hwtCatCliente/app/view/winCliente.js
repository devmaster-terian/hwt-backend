/*
 * File: app/view/winCliente.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('hwtCatCliente.view.winCliente', {
    extend: 'Ext.window.Window',
    alias: 'widget.winCliente',

    requires: [
        'hwtCatCliente.view.winClienteViewModel',
        'Ext.form.Panel',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.toolbar.Fill',
        'Ext.form.FieldSet',
        'Ext.resizer.Splitter',
        'Ext.form.field.ComboBox'
    ],

    viewModel: {
        type: 'wincliente'
    },
    modal: true,
    id: 'winCliente',
    itemId: 'winCliente',
    width: 830,
    closable: false,
    title: 'Cliente',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            confirmarRegistro: function() {
                if(Ext.getCmp('formCliente').isValid()){
                    var formRegistro  = 'formCliente';
                    var apiController = 'apiCliente';
                    var apiMethod     = 'grabaCliente';

                    var objJsonRequest = new Object();
                    objJsonRequest.apiController = apiController;
                    objJsonRequest.apiMethod     = apiMethod;
                    objJsonRequest.apiData       = elf.prepareFormFields(formRegistro);

                    var functionSuccess = function(){
                        var jsonData = elf.getInfoDataBridge(apiMethod);

                        elf.showInfo(jsonData, 'information');

                        elf.closeWindow('winCliente');
                        elf.refreshGrid('gridCliente');
                    };

                    var functionFailure = function(){
                        var jsonData = elf.getInfoDataBridge(apiMethod);
                        elf.showInfo(jsonData, 'error', 'tfNombreCorto');
                    };

                    elf.doDataBridge(objJsonRequest,
                    functionSuccess,
                    null,
                    functionFailure,
                    null);
                } //Formulario Valido
                else{
                    elf.message('error',
                    'Formulario Incompleto',
                    'Debe de llenar los Campos Requeridos');
                }
            },
            preparaInterfaz: function () {
                var arrayCombos = new Array();
                arrayCombos.push('EstadoCliente');
                arrayCombos.forEach(Ext.getCmp('formAplicacion').cargaCombo);

                var objConfig = new Object();
                objConfig.idComboBox = 'cbxDirPais';
                objConfig.idDataBridge = 'datosOpciones';
                objConfig.id = 'opcionesPais';
                objConfig.fieldValue = 'cod_pais';
                objConfig.fieldDisplay = 'pais';
                arrayCombos.push(objConfig);

                arrayCombos.forEach(elf.loadComboBoxConfig);
            },
            obtieneLocalizacion: function (pTipo, pFuncionCarga) {
                var apiController = 'apiOportunidadVenta';
                var apiMethod = 'datosLocalizacion';

                var objJsonData = new Object();
                objJsonData.pais = elf.readElement('cbxDirPais');
                objJsonData.estado = elf.readElement('cbxDirEstado');
                objJsonData.municipio = elf.readElement('cbxDirMunicipio');
                objJsonData.tipoDato = pTipo;

                var objJsonRequest = new Object();
                objJsonRequest.apiController = apiController;
                objJsonRequest.apiMethod = apiMethod;
                objJsonRequest.apiData = JSON.stringify(objJsonData);

                var functionSuccess = function () {
                    var jsonData = elf.getInfoDataBridge('datosLocalizacion');
                    pFuncionCarga();
                };

                var functionFailure = function () {
                    var jsonData = elf.getInfoDataBridge('datosLocalizacion');
                    elf.showInfo(jsonData, 'error');
                };


                elf.doDataBridge(objJsonRequest,
                    functionSuccess,
                    null,
                    functionFailure,
                    null);
            },
            id: 'formCliente',
            itemId: 'formCliente',
            layout: 'column',
            bodyCls: 'formBackground',
            bodyPadding: 10,
            dockedItems: [
                {
                    xtype: 'toolbar',
                    cls: 'toolbarBackground',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'button',
                            id: 'btnClienteConfirmar',
                            itemId: 'btnClienteConfirmar',
                            width: 130,
                            iconCls: 'fa fa-check-square icon16 iconColorGreen',
                            text: 'Confirmar',
                            textAlign: 'left',
                            listeners: {
                                click: 'onBtnClienteConfirmarClick'
                            }
                        },
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            id: 'btnClienteCerrar',
                            itemId: 'btnClienteCerrar',
                            width: 130,
                            iconCls: 'fa fa-window-close icon16 iconColorRed',
                            text: 'Cerrar',
                            textAlign: 'left',
                            listeners: {
                                click: 'onBtnClienteCerrarClick'
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'fieldset',
                    columnWidth: 1,
                    id: 'fieldsetClienteDatosFiscales',
                    itemId: 'fieldsetClienteDatosFiscales',
                    layout: 'column',
                    title: '<b>Datos Fiscales</b>',
                    items: [
                        {
                            xtype: 'textfield',
                            columnWidth: 0.3,
                            disabled: true,
                            disabledCls: 'disabledField',
                            id: 'tfCodigoCliente',
                            itemId: 'tfCodigoCliente',
                            margin: '0 20 5 0',
                            fieldLabel: 'Codigo',
                            labelWidth: 120
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.35,
                            disabledCls: 'disabledField',
                            id: 'tfNombreCorto',
                            itemId: 'tfNombreCorto',
                            margin: '0 20 5 0',
                            fieldLabel: 'Nombre Corto',
                            labelWidth: 90,
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.35,
                            disabledCls: 'disabledField',
                            id: 'tfRfc',
                            itemId: 'tfRfc',
                            margin: '0 20 5 0',
                            fieldLabel: 'RFC',
                            labelWidth: 50,
                            allowBlank: false
                        },
                        {
                            xtype: 'splitter',
                            columnWidth: 1,
                            height: 0
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 1,
                            disabledCls: 'disabledField',
                            id: 'tfRazonSocial',
                            itemId: 'tfRazonSocial',
                            margin: '0 20 5 0',
                            fieldLabel: 'Razon Social',
                            labelWidth: 120,
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.5,
                            disabledCls: 'disabledField',
                            id: 'tfRepresentanteLegal',
                            itemId: 'tfRepresentanteLegal',
                            margin: '0 20 5 0',
                            fieldLabel: 'Representante Legal',
                            labelWidth: 120,
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.5,
                            disabledCls: 'disabledField',
                            id: 'tfFacturacionEmail',
                            itemId: 'tfFacturacionEmail',
                            margin: '0 20 5 0',
                            fieldLabel: 'Correo Facturacion',
                            labelWidth: 120,
                            allowBlank: false
                        },
                        {
                            xtype: 'combobox',
                            columnWidth: 0.4,
                            id: 'cbxEstadoCliente',
                            itemId: 'cbxEstadoCliente',
                            margin: '0 20 5 0',
                            fieldLabel: 'Estatus del Cliente',
                            labelWidth: 120,
                            allowBlank: false,
                            editable: false,
                            requiredCls: 'requiredField',
                            displayField: 'descripcion',
                            queryMode: 'local',
                            store: 'storeEstadoCliente',
                            valueField: 'descripcion'
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    columnWidth: 1,
                    id: 'fieldsetClienteContacto',
                    itemId: 'fieldsetClienteContacto',
                    layout: 'column',
                    title: '<b>Contacto</b>',
                    items: [
                        {
                            xtype: 'textfield',
                            columnWidth: 0.5,
                            disabledCls: 'disabledField',
                            id: 'tfContactoNombre',
                            itemId: 'tfContactoNombre',
                            margin: '0 20 5 0',
                            fieldLabel: 'Nombre',
                            labelWidth: 120
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.5,
                            disabledCls: 'disabledField',
                            id: 'tfContactoCargo',
                            itemId: 'tfContactoCargo',
                            margin: '0 20 5 0',
                            fieldLabel: 'Cargo',
                            labelWidth: 120
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.5,
                            disabledCls: 'disabledField',
                            id: 'tfContactoTelefono',
                            itemId: 'tfContactoTelefono',
                            margin: '0 20 5 0',
                            fieldLabel: 'Teléfono',
                            labelWidth: 120
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.5,
                            disabledCls: 'disabledField',
                            id: 'tfContactoEmail',
                            itemId: 'tfContactoEmail',
                            margin: '0 20 5 0',
                            fieldLabel: 'Correo Contacto',
                            labelWidth: 120
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.5,
                            disabledCls: 'disabledField',
                            id: 'tfContactoMovil',
                            itemId: 'tfContactoMovil',
                            margin: '0 20 5 0',
                            fieldLabel: 'Teléfono Móvil',
                            labelWidth: 120
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    columnWidth: 1,
                    id: 'fieldsetClienteDireccion',
                    itemId: 'fieldsetClienteDireccion',
                    layout: 'column',
                    title: '<b>Direccion</b>',
                    items: [
                        {
                            xtype: 'textfield',
                            columnWidth: 0.5,
                            disabledCls: 'disabledField',
                            id: 'tfDirCalle',
                            itemId: 'tfDirCalle',
                            margin: '0 20 5 0',
                            fieldLabel: 'Calle',
                            labelWidth: 120
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.25,
                            disabledCls: 'disabledField',
                            id: 'tfDirNumExterior',
                            itemId: 'tfDirNumExterior',
                            margin: '0 20 5 0',
                            fieldLabel: 'No. Exterior',
                            labelWidth: 120
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.25,
                            disabledCls: 'disabledField',
                            id: 'tfDirNumInterior',
                            itemId: 'tfDirNumInterior',
                            margin: '0 20 5 0',
                            fieldLabel: 'No. Interior',
                            labelWidth: 120
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.5,
                            disabledCls: 'disabledField',
                            id: 'tfCodigoPostal',
                            itemId: 'tfCodigoPostal',
                            margin: '0 20 5 0',
                            fieldLabel: 'Codigo Postal',
                            labelWidth: 120
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.44,
                            disabledCls: 'disabledField',
                            id: 'tfDirPais',
                            itemId: 'tfDirPais',
                            margin: '0 0 5 0',
                            fieldLabel: 'Pais',
                            labelWidth: 120,
                            editable: false
                        },
                        {
                            xtype: 'button',
                            columnWidth: 0.03,
                            cls: 'botonZoom',
                            id: 'btnZoomPais',
                            itemId: 'btnZoomPais',
                            margin: '0 20 0 0',
                            minWidth: 27,
                            width: 27,
                            iconCls: 'fa fa-search icon16 iconColorWhite',
                            textAlign: 'left',
                            listeners: {
                                click: 'onBtnZoomPaisClick'
                            }
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.44,
                            disabledCls: 'disabledField',
                            id: 'tfDirEstado',
                            itemId: 'tfDirEstado',
                            margin: '0 0 5 0',
                            fieldLabel: 'Entidad',
                            labelWidth: 120,
                            editable: false
                        },
                        {
                            xtype: 'button',
                            columnWidth: 0.03,
                            cls: 'botonZoom',
                            id: 'btnZoomEstado',
                            itemId: 'btnZoomEstado',
                            margin: '0 20 0 0',
                            minWidth: 27,
                            width: 27,
                            iconCls: 'fa fa-search icon16 iconColorWhite',
                            textAlign: 'left',
                            listeners: {
                                click: 'onBtnZoomEstadoClick'
                            }
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.44,
                            disabledCls: 'disabledField',
                            id: 'tfDirMunicipio',
                            itemId: 'tfDirMunicipio',
                            margin: '0 0 5 0',
                            fieldLabel: 'Municipio',
                            labelWidth: 120,
                            editable: false
                        },
                        {
                            xtype: 'button',
                            columnWidth: 0.03,
                            cls: 'botonZoom',
                            id: 'btnZoomMunicipio',
                            itemId: 'btnZoomMunicipio',
                            margin: '0 20 0 0',
                            minWidth: 27,
                            width: 27,
                            iconCls: 'fa fa-search icon16 iconColorWhite',
                            textAlign: 'left',
                            listeners: {
                                click: 'onBtnZoomEstadoClick2'
                            }
                        },
                        {
                            xtype: 'textfield',
                            columnWidth: 0.44,
                            disabledCls: 'disabledField',
                            id: 'tfDirColonia',
                            itemId: 'tfDirColonia',
                            margin: '0 0 5 0',
                            fieldLabel: 'Colonia',
                            labelWidth: 120,
                            editable: false
                        },
                        {
                            xtype: 'button',
                            columnWidth: 0.03,
                            cls: 'botonZoom',
                            id: 'btnZoomColonia',
                            itemId: 'btnZoomColonia',
                            margin: '0 20 0 0',
                            minWidth: 27,
                            width: 27,
                            iconCls: 'fa fa-search icon16 iconColorWhite',
                            textAlign: 'left',
                            listeners: {
                                click: 'onBtnZoomColoniaClick'
                            }
                        }
                    ]
                }
            ]
        }
    ],

    onBtnClienteConfirmarClick: function(button, e, eOpts) {
        Ext.getCmp('formCliente').confirmarRegistro();
    },

    onBtnClienteCerrarClick: function(button, e, eOpts) {
        Ext.getCmp('formCliente').estadoRegistro = '';
        elf.closeWindow('winCliente');
    },

    onBtnZoomPaisClick: function (button, e, eOpts) {
        elf.openWindow('winZoomGenerico');
        Ext.getCmp('winZoomGenerico').setTitle('Seleccione un Pais');

        var funcionSeleccionaRegistro = function () {
            registroActivo = Ext.getCmp('gridZoomGenerico').recordActivo;
            elf.writeElement('tfDirPais', registroActivo.descripcion);
            elf.closeWindow('winZoomGenerico');
        };

        var funcionCarga = function () {
            console.log('funcion de carga');

            var storeZoomGenerico = Ext.getStore('storeZoomGenerico');
            var proxyZoomGenerico = storeZoomGenerico.getProxy();

            var objJsonData = new Object();
            objJsonData.page = storeZoomGenerico.currentPage;
            objJsonData.start = (storeZoomGenerico.currentPage - 1) * storeZoomGenerico.pageSize;
            objJsonData.limit = storeZoomGenerico.pageSize;
            objJsonData.filtroEstado = 'ACTIVO';

            var objJsonRequest = new Object();
            objJsonRequest.apiController = 'sysApiLocalizacion';
            objJsonRequest.apiMethod = 'zoomPais';
            objJsonRequest.apiData = JSON.stringify(objJsonData);

            proxyZoomGenerico.api.read = elf.setApiDataBridge(objJsonRequest.apiController);
            proxyZoomGenerico.extraParams = objJsonRequest;

        };

        storeZoomGenerico = Ext.getStore('storeZoomGenerico');
        storeZoomGenerico.funcionCarga = funcionCarga;
        storeZoomGenerico.funcionSeleccionaRegistro = funcionSeleccionaRegistro;
        storeZoomGenerico.load();
    },

    onBtnZoomEstadoClick: function (button, e, eOpts) {
        elf.openWindow('winZoomGenerico');
        Ext.getCmp('winZoomGenerico').setTitle('Seleccione un Estado');

        var funcionSeleccionaRegistro = function () {
            registroActivo = Ext.getCmp('gridZoomGenerico').recordActivo;
            elf.writeElement('tfDirEstado', registroActivo.descripcion);
            elf.writeElement('tfDirMunicipio', '');
            elf.writeElement('tfDirColonia', '');
            elf.closeWindow('winZoomGenerico');
        };

        var funcionCarga = function () {
            console.log('funcion de carga');

            var storeZoomGenerico = Ext.getStore('storeZoomGenerico');
            var proxyZoomGenerico = storeZoomGenerico.getProxy();

            var objJsonData = new Object();
            objJsonData.page = storeZoomGenerico.currentPage;
            objJsonData.start = (storeZoomGenerico.currentPage - 1) * storeZoomGenerico.pageSize;
            objJsonData.limit = storeZoomGenerico.pageSize;
            objJsonData.filtroEstado = 'ACTIVO';
            objJsonData.pais = elf.readElement('tfDirPais');

            var objJsonRequest = new Object();
            objJsonRequest.apiController = 'sysApiLocalizacion';
            objJsonRequest.apiMethod = 'zoomEstado';
            objJsonRequest.apiData = JSON.stringify(objJsonData);

            proxyZoomGenerico.api.read = elf.setApiDataBridge(objJsonRequest.apiController);
            proxyZoomGenerico.extraParams = objJsonRequest;

        };

        storeZoomGenerico = Ext.getStore('storeZoomGenerico');
        storeZoomGenerico.funcionCarga = funcionCarga;
        storeZoomGenerico.funcionSeleccionaRegistro = funcionSeleccionaRegistro;
        storeZoomGenerico.load();

    },

    onBtnZoomEstadoClick2: function (button, e, eOpts) {
        elf.openWindow('winZoomGenerico');
        Ext.getCmp('winZoomGenerico').setTitle('Seleccione un Estado');

        var funcionSeleccionaRegistro = function () {
            registroActivo = Ext.getCmp('gridZoomGenerico').recordActivo;
            elf.writeElement('tfDirMunicipio', registroActivo.descripcion);
            elf.writeElement('tfDirColonia', '');
            elf.closeWindow('winZoomGenerico');
        };

        var funcionCarga = function () {
            console.log('funcion de carga');

            var storeZoomGenerico = Ext.getStore('storeZoomGenerico');
            var proxyZoomGenerico = storeZoomGenerico.getProxy();

            var objJsonData = new Object();
            objJsonData.page = storeZoomGenerico.currentPage;
            objJsonData.start = (storeZoomGenerico.currentPage - 1) * storeZoomGenerico.pageSize;
            objJsonData.limit = storeZoomGenerico.pageSize;
            objJsonData.filtroEstado = 'ACTIVO';
            objJsonData.pais = elf.readElement('tfDirPais');
            objJsonData.estado = elf.readElement('tfDirEstado');

            var objJsonRequest = new Object();
            objJsonRequest.apiController = 'sysApiLocalizacion';
            objJsonRequest.apiMethod = 'zoomMunicipio';
            objJsonRequest.apiData = JSON.stringify(objJsonData);

            proxyZoomGenerico.api.read = elf.setApiDataBridge(objJsonRequest.apiController);
            proxyZoomGenerico.extraParams = objJsonRequest;

        };

        storeZoomGenerico = Ext.getStore('storeZoomGenerico');
        storeZoomGenerico.funcionCarga = funcionCarga;
        storeZoomGenerico.funcionSeleccionaRegistro = funcionSeleccionaRegistro;
        storeZoomGenerico.load();
    },

    onBtnZoomColoniaClick: function (button, e, eOpts) {
        elf.openWindow('winZoomGenerico');
        Ext.getCmp('winZoomGenerico').setTitle('Seleccione un Estado');

        var funcionSeleccionaRegistro = function () {
            registroActivo = Ext.getCmp('gridZoomGenerico').recordActivo;
            elf.writeElement('tfDirColonia', registroActivo.descripcion);
            elf.closeWindow('winZoomGenerico');
        };

        var funcionCarga = function () {
            console.log('funcion de carga');

            var storeZoomGenerico = Ext.getStore('storeZoomGenerico');
            var proxyZoomGenerico = storeZoomGenerico.getProxy();

            var objJsonData = new Object();
            objJsonData.page = storeZoomGenerico.currentPage;
            objJsonData.start = (storeZoomGenerico.currentPage - 1) * storeZoomGenerico.pageSize;
            objJsonData.limit = storeZoomGenerico.pageSize;
            objJsonData.filtroEstado = 'ACTIVO';
            objJsonData.pais = elf.readElement('tfDirPais');
            objJsonData.estado = elf.readElement('tfDirEstado');
            objJsonData.municipio = elf.readElement('tfDirMunicipio');

            var objJsonRequest = new Object();
            objJsonRequest.apiController = 'sysApiLocalizacion';
            objJsonRequest.apiMethod = 'zoomColonia';
            objJsonRequest.apiData = JSON.stringify(objJsonData);

            proxyZoomGenerico.api.read = elf.setApiDataBridge(objJsonRequest.apiController);
            proxyZoomGenerico.extraParams = objJsonRequest;

        };

        storeZoomGenerico = Ext.getStore('storeZoomGenerico');
        storeZoomGenerico.funcionCarga = funcionCarga;
        storeZoomGenerico.funcionSeleccionaRegistro = funcionSeleccionaRegistro;
        storeZoomGenerico.load();
    }

});